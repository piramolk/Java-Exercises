public class FindMostDivisors {

   /* This program finds an integer between 1 and 10000 that has
      the largest number of divisors.  It prints out the maximum
      number of divisors and an integer that has that many divisors.
   */
 
	public static void main(String[] args) {
   	
 	 	
 		//for each number need to find and store number of divisors and then compare to previous number
 			
 		int N; 	// the integers we are testing
 		int maxDivisors=1;  // eventual answer, the largest number of divisors
		int result=1;  // the integer with the most number of divisors
			
		for(N=2; N<=10000; N++){
		
		//finding out for each integer, how many divisors it has
		
 		int testDivisor;  // number between 1 and N , a possible divisor of N
		int divisorCount = 0;  //number of divisors for N							
			
		
		for(testDivisor = 1; testDivisor <= N; testDivisor++){
										
				if(N % testDivisor == 0){
					divisorCount++;
				}					
		}
			
		//now we can check to see if this particular N has more divisors than the last one,
		// if so we store the number of divisors as the new divcount and that particular N as the result
		
		//this will keep overwriting unless we can no longer find another N with more divisors
		if(divisorCount > maxDivisors){
				
				maxDivisors = divisorCount;
				result = N;
		}
				
		}
	
	   System.out.println("Among integers between 1 and 10000,");
       System.out.println("The maximum number of divisors is " + maxDivisors);
       System.out.println("A number with " + maxDivisors + " divisors is " + result);  
	}
 }
